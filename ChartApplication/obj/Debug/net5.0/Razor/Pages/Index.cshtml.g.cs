#pragma checksum "C:\Users\salunkhe\source\repos\ChartApplication\ChartApplication\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d280a9aeee83675d49f709ffe472c4bf058a270d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(ChartApplication.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace ChartApplication.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\salunkhe\source\repos\ChartApplication\ChartApplication\Pages\_ViewImports.cshtml"
using ChartApplication;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d280a9aeee83675d49f709ffe472c4bf058a270d", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6661e28e8692d14915bf452c630aaa7e4f401313", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\salunkhe\source\repos\ChartApplication\ChartApplication\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"">
</script>

<div class=""text-center"">
    <canvas id=""myChart"" style=""width:100%;max-width:700px""></canvas>

</div>

<script>
    //var xValues = [50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150];
    //var yValues = [7, 8, 8, 9, 9, 9, 10, 11, 14, 14, 15];
    var jsonfile = {
        ""jsonarray"": [
            {
                ""EnergtPerUnit"": 6.1,
                ""Energy"": 15,
                ""UpdatedDate"": ""01-01-2022"",
                ""EnergyCalculated"": 91.5,
                ""UpdatedBy"": ""A""
            },
            {
                ""EnergtPerUnit"": 7,
                ""Energy"": 40,
                ""UpdatedDate"": ""01-02-2022"",
                ""EnergyCalculated"": 280,
                ""UpdatedBy"": ""B""
            },
            {
                ""EnergtPerUnit"": 8,
                ""Energy"": 30,
                ""UpdatedDate"": ""01-03-2022"",
                ""EnergyCalculated"": 240,
                ");
            WriteLiteral(@"""UpdatedBy"": ""C""
            },
            {
                ""EnergtPerUnit"": 5.5,
                ""Energy"": 20,
                ""UpdatedDate"": ""01-04-2022"",
                ""EnergyCalculated"": 110,
                ""UpdatedBy"": ""D""
            },
            {
                ""EnergtPerUnit"": 9,
                ""Energy"": 30,
                ""UpdatedDate"": ""01-05-2022"",
                ""EnergyCalculated"": 270,
                ""UpdatedBy"": ""E""
            },
            {
                ""EnergtPerUnit"": 10,
                ""Energy"": 30,
                ""UpdatedDate"": ""01-06-2022"",
                ""EnergyCalculated"": 300,
                ""UpdatedBy"": ""F""
            }
        ]
    };

    var labels = jsonfile.jsonarray.map(function (e) {
        return e.UpdatedDate;
    });
    var calculatedEnergy = jsonfile.jsonarray.map(function (e) {
        return  e.EnergyCalculated;
    });
    console.log(calculatedEnergy);
    var enrgryValue = jsonfile.jsonarray.map(function (e) {");
            WriteLiteral(@"
        return e.Energy;
    });

    var enrgryPerUnit = jsonfile.jsonarray.map(function (e) {
        return e.EnergtPerUnit;
    });

    new Chart(""myChart"", {
        type: ""line"",
        data: {
            labels: labels,
            datasets: [{
                label: ""Calculated Energy"",
                fill: false,
                lineTension: 0,
                backgroundColor: ""rgba(0,0,255,1.0)"",
                borderColor: ""rgba(0,0,255,0.1)"",
                data: calculatedEnergy
            }]
        },
        options: {
            legend: { display: false },
            scales: {
                yAxes: [{ ticks: { min: 0, max: 500 } }],
            },
            tooltips: {
                enabled: true,
                mode: 'single',
                callbacks: {
                    beforeFooter: function (tooltipItems, calculatedEnergy) {
                        return 'Energy #: ' + enrgryValue[tooltipItems[0].index];
                    },
         ");
            WriteLiteral("           footer: function (tooltipItems, calculatedEnergy) {\r\n                        return \'EnrgryPerUnit: \' + enrgryPerUnit[tooltipItems[0].index];\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    });\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
